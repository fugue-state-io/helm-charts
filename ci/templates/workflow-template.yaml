apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: curl-ghcnd-stations-template
spec:
  serviceAccountName: operate-workflow-sa
  templates:
    - name: curl-ghcnd-stations
      script:
        image: {{ .Values.workflow_task_image }}
        command: [sh]
        source: |
          set -e
          curl https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/ghcnd-stations.txt > /ghcnd-stations.csv
          cat /ghcnd-stations.csv
      outputs:
        artifacts:
        - name: ghcnd-stations
          path: /ghcnd-stations.csv

    - name: stations-json-list
      inputs:
        artifacts:
        - name: ghcnd-stations-csv
          path: /ghcnd-stations.csv
      script:
        image: {{ .Values.etl_image }}:{{ .Values.etl_tag }}
        command: [sh]
        source: |
          set -e
          python3 /etl/stations_to_json.py /ghcnd-stations.csv /ghcnd-stations.json

          cat /ghcnd-stations.json
      outputs:
        artifacts:
        - name: ghcnd-stations
          path: /ghcnd-stations.json

    - name: scylla-connection
      script:
        image: {{ .Values.etl_image }}:{{ .Values.etl_tag }}
        command: [sh]
        source: |
          set -e
          python3 /etl/scylla_idempotent_init.py

    - name: map-stations
      inputs:
        artifacts:
        - name: ghcnd-stations-json
          path: /ghcnd-stations.json
        parameters:
        - name: slice_index
        - name: number_of_slices
      script:
        image: {{ .Values.etl_image }}:{{ .Values.etl_tag }}
        command: [sh]
        source: |
          set -e
          python3 /etl/slice_stations.py /ghcnd-stations.json /subset-stations.json {{`{{inputs.parameters.slice_index}}`}} {{`{{inputs.parameters.number_of_slices}}`}}
          
          jq -cr '.[] | .station' /subset-stations.json | while read i; do
            echo $i
            curl --retry 5 --retry-max-time 600 https://www.ncei.noaa.gov/data/global-historical-climatology-network-daily/access/$i.csv > /tmp/$i.csv
          done
      outputs:
        artifacts:
          - name: fan-out-artifacts
            path: /tmp/
            archive: { none: {} }
            s3:
              key: ghcn-data/

    - name: process-stations
      inputs:
        artifacts:
        - name: ghcnd-stations-json
          path: /ghcnd-stations.json
        - name: artifact-files
          path: /tmp
          # Here we are mounting the exact same artifact folder-location
          # that we wrote into during the fan-out phase.
          s3:
            key: ghcn-data/
      script:
        image: {{ .Values.etl_image }}:{{ .Values.etl_tag }}
        command: [sh]
        source: |
          set -e
          ls -la /tmp/
