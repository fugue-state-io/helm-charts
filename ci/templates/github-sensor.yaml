apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: github
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: github-dep
      eventSourceName: github
      eventName: repo_hook
  triggers:
    - template:
        name: github-sensor-trigger
        k8s:
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: github-
              spec:
                volumes:
                - name: docker-cfg
                  secret:
                    secretName: docker-cfg
                serviceAccountName: operate-workflow-sa
                arguments:
                  parameters:
                    - name: body
                entrypoint: main
                imagePullSecrets:
                - name: fugue-state-registry
                templates:
                  - name: main
                    dag:
                      tasks:
                        - name: body-to-artifact
                          template: body-to-artifact

                        - name: get-repo
                          depends: body-to-artifact
                          template: get-repo
                          arguments:
                            artifacts:
                              - name: body
                                from: "{{`{{tasks.body-to-artifact.outputs.artifacts.body}}`}}"

                        - name: get-revision
                          depends: body-to-artifact
                          template: get-revision
                          arguments:
                            artifacts:
                              - name: body
                                from: "{{`{{tasks.body-to-artifact.outputs.artifacts.body}}`}}"

                        - name: jq-artifact
                          depends: body-to-artifact
                          template: jq-artifact
                          arguments:
                            artifacts:
                              - name: body
                                from: "{{`{{tasks.body-to-artifact.outputs.artifacts.body}}`}}"

                        - name: get-event
                          depends: body-to-artifact
                          template: get-event
                          arguments:
                            artifacts:
                              - name: body
                                from: "{{`{{tasks.body-to-artifact.outputs.artifacts.body}}`}}"

                        - name: push-event
                          depends: get-event && get-repo && get-revision && body-to-artifact
                          when: "{{`{{tasks.get-event.outputs.result}}`}} == 'push'"
                          template: push-event
                          arguments:
                            artifacts:
                              - name: argo-source
                                path: /src
                                git:
                                  repo: "{{`{{tasks.get-repo.outputs.result}}`}}"
                                  revision: "{{`{{tasks.get-revision.outputs.result}}`}}"
                              - name: body
                                from: "{{`{{tasks.body-to-artifact.outputs.artifacts.body}}`}}"
                          volumeMounts:
                          - name: docker-cfg
                            mountPath: "/secret/"


                        - name: check-suite-event
                          depends: get-event && get-repo && get-revision && body-to-artifact
                          when: "{{`{{tasks.get-event.outputs.result}}`}} == 'check_suite'"
                          template: check-suite-event
                          arguments:
                            artifacts:
                              - name: argo-source
                                path: /src
                                git:
                                  repo: "{{`{{tasks.get-repo.outputs.result}}`}}"
                                  revision: "{{`{{tasks.get-revision.outputs.result}}`}}"
                              - name: body
                                from: "{{`{{tasks.body-to-artifact.outputs.artifacts.body}}`}}"
                        
                  - name: body-to-artifact
                    inputs:
                      parameters:
                        - name: body
                          value: '{{`{{workflow.parameters.body}}`}}'
                    script:
                      image: alpine
                      command: [sh]
                      source: |
                        set -e
                        cat <<EOF > /body.json
                        {{`{{inputs.parameters.body}}`}}
                        EOF
                    outputs:
                      artifacts:
                        - name: body
                          path: "/body.json"

                  - name: cat-artifact
                    inputs:
                      artifacts:
                        - name: body
                          path: "/body.json"
                    script:
                      image: alpine
                      command: [sh]
                      source: |
                        set -e
                        cat /body.json

                  - name: jq-artifact
                    inputs:
                      artifacts:
                        - name: body
                          path: "/body.json"
                    script:  
                      image: registry.digitalocean.com/fugue-state-registry/workflow-task-image:2c38fe6c
                      command: [sh]
                      source: |
                        set -e
                        cat /body.json | jq '.'

                  - name: get-event
                    inputs:
                      artifacts:
                        - name: body
                          path: "/body.json"
                    script:
                      image: registry.digitalocean.com/fugue-state-registry/workflow-task-image:2c38fe6c
                      command: [sh]
                      source: |
                        set -e
                        cat /body.json | jq -r '.["X-GitHub-Event"]'

                  - name: get-repo
                    inputs:
                      artifacts:
                        - name: body
                          path: "/body.json"
                    script:
                      image: registry.digitalocean.com/fugue-state-registry/workflow-task-image:2c38fe6c
                      command: [sh]
                      source: |
                        set -e
                        cat /body.json | jq -r '.["repository"] | .["clone_url"]'

                  - name: get-revision
                    inputs:
                      artifacts:
                        - name: body
                          path: "/body.json"
                    script:
                      image: registry.digitalocean.com/fugue-state-registry/workflow-task-image:2c38fe6c
                      command: [sh]
                      source: |
                        set -e
                        cat /body.json | jq -r '.["after"] | select( . != null )' >> /result.txt
                        cat /body.json | jq -r '.["check_suite"] | .["after"] | select( . != null )' >> /result.txt
                        cat /result.txt

                  - name: push-event
                    inputs:
                      artifacts:
                      - name: argo-source
                        path: /src
                      - name: body
                        path: "/body.json"
                    script:
                      image: registry.digitalocean.com/fugue-state-registry/workflow-task-image:2c38fe6c
                      command: [bash]
                      source: |
                        set -e
                        cd /src
                        ls -la /src/
                        export GIT_REF=$(cat /body.json | jq -r '.["ref"]')
                        export MASTER_BRANCH=$(cat /body.json | jq -r '.["repository"] | .["master_branch"]')
                        if [[ $GIT_REF == *$MASTER_BRANCH ]] # * is used for pattern matching
                        then
                          echo "Push to Master branch";
                          if [ -f "/src/ci.sh" ]; then
                            bash /src/ci.sh
                          fi
                        else
                          echo "Push to other branch";
                        fi

                  - name: check-suite-event
                    inputs:
                      artifacts:
                      - name: argo-source
                        path: /src
                      - name: body
                        path: "/body.json"
                    script:
                      image: registry.digitalocean.com/fugue-state-registry/workflow-task-image:2c38fe6c
                      command: [sh]
                      source: |
                        set -e
                        if [ -f "/src/check_suite.sh" ]; then
                          bash /src/check_suite.sh
                        fi

                  - name: clone-repo
                    inputs:
                      artifacts:
                      - name: argo-source
                        path: /src
                    container:
                      image: registry.digitalocean.com/fugue-state-registry/workflow-task-image:2c38fe6c
                      command: [sh]
                      source: |
                        git status
                    outputs:
                      artifacts:
                      - name: argo-source
                        path: /src
          parameters:
            - src:
                dependencyName: github-dep
                dataKey: body
              dest: spec.arguments.parameters.0.value