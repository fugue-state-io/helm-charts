apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: github
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: github-dep
      eventSourceName: github
      eventName: repo_hook
  triggers:
    - template:
        name: github-sensor-trigger
        k8s:
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: github-
              spec:
                serviceAccountName: operate-workflow-sa
                arguments:
                  parameters:
                    - name: body
                entrypoint: main
                templates:
                  - name: main
                    dag:
                      tasks:
                        - name: body-to-artifact
                          template: body-to-artifact
                        
                        - name: cat-artifact
                          depends: body-to-artifact
                          template: cat-artifact
                          arguments:
                            artifacts:
                              - name: body
                                from: "{{`{{tasks.body-to-artifact.outputs.artifacts.body}}`}}"

                        - name: get-repo
                          depends: body-to-artifact
                          template: get-repo
                          arguments:
                            artifacts:
                              - name: body
                                from: "{{`{{tasks.body-to-artifact.outputs.artifacts.body}}`}}"

                        - name: clone-repo
                          depends: get-repo
                          template: clone-repo
                          arguments:
                            artifacts:
                              - name: argo-source
                                path: /src
                                git:
                                  repo: "{{`{{tasks.get-repo.outputs.result}}`}}"
                                  revision: "v2.1.1"
                                  
                        - name: jq-artifact
                          depends: body-to-artifact
                          template: jq-artifact
                          arguments:
                            artifacts:
                              - name: body
                                from: "{{`{{tasks.body-to-artifact.outputs.artifacts.body}}`}}"

                        - name: get-event
                          depends: body-to-artifact
                          template: get-event
                          arguments:
                            artifacts:
                              - name: body
                                from: "{{`{{tasks.body-to-artifact.outputs.artifacts.body}}`}}"

                        - name: push-event
                          depends: get-event && clone-repo
                          when: "{{`{{tasks.get-event.outputs.result}}`}} == 'push'"
                          template: push-event
                          arguments:
                            artifacts:
                              - name: argo-source
                                from: "{{`{{tasks.clone-repo.outputs.artifacts.argo-source}}`}}"

                        - name: check-suite-event
                          depends: get-event && clone-repo
                          when: "{{`{{tasks.get-event.outputs.result}}`}} == 'check_suite'"
                          template: push-event
                          arguments:
                            artifacts:
                              - name: argo-source
                                from: "{{`{{tasks.clone-repo.outputs.artifacts.argo-source}}`}}"
                        
                  - name: body-to-artifact
                    inputs:
                      parameters:
                        - name: body
                          value: '{{`{{workflow.parameters.body}}`}}'
                    script:
                      image: alpine
                      command: [sh]
                      source: |
                        set -e
                        cat <<EOF > /body.json
                        {{`{{inputs.parameters.body}}`}}
                        EOF
                    outputs:
                      artifacts:
                        - name: body
                          path: "/body.json"

                  - name: cat-artifact
                    inputs:
                      artifacts:
                        - name: body
                          path: "/body.json"
                    script:
                      image: alpine
                      command: [sh]
                      source: |
                        set -e
                        cat /body.json

                  - name: jq-artifact
                    inputs:
                      artifacts:
                        - name: body
                          path: "/body.json"
                    script:
                      image: badouralix/curl-jq
                      command: [sh]
                      source: |
                        set -e
                        cat /body.json | jq '.'

                  - name: get-event
                    inputs:
                      artifacts:
                        - name: body
                          path: "/body.json"
                    script:
                      image: badouralix/curl-jq
                      command: [sh]
                      source: |
                        set -e
                        cat /body.json | jq -r '.["X-GitHub-Event"]'

                  - name: get-repo
                    inputs:
                      artifacts:
                        - name: body
                          path: "/body.json"
                    script:
                      image: badouralix/curl-jq
                      command: [sh]
                      source: |
                        set -e
                        cat /body.json | jq -r '.["repository"] | .["clone_url"]'

                  - name: push-event
                    inputs:
                      artifacts:
                      - name: argo-source
                        path: /src
                    script:
                      image: badouralix/curl-jq
                      command: [sh]
                      source: |
                        set -e
                        echo "push-event"

                  - name: check-suite-event
                    inputs:
                      artifacts:
                      - name: argo-source
                        path: /src
                    script:
                      image: badouralix/curl-jq
                      command: [sh]
                      source: |
                        set -e
                        echo "check-suite-event"

                  - name: clone-repo
                    inputs:
                      artifacts:
                      - name: argo-source
                        path: /src
                    container:
                      image: golang:1.10
                      command: [sh, -c]
                      args: ["git status && ls && cat VERSION"]
                      workingDir: /src
                    outputs:
                      artifacts:
                      - name: argo-source
                        path: /src
          parameters:
            - src:
                dependencyName: github-dep
                dataKey: body
              dest: spec.arguments.parameters.0.value